proc setup {} {
    # NOTE: Changing dir to $SRCDIR is necessary because file locations in the
    #       ssh config files (e.g. UserKnownHostsFile) are relative to $SRCDIR.
    assert_bash_exec {cd $SRCDIR}
    save_env
}


proc teardown {} {
    assert_env_unmodified {
        /COMPREPLY=/d
        /OLDHOME=/d
    }
    assert_bash_exec {cd $TESTDIR}
}


setup


set test "Files containing consecutive spaces should work"
set hosts [get_hosts]
set hosts_orig $hosts
# Hosts `gee' and `hus' are defined in
#`./fixtures/_known_hosts_real/spaced  conf'
# Hosts `two*' are defined in ./fixtures/_known_hosts_real/known_hosts2
lappend hosts gee hus two two2 two3 two4
set hosts_config $hosts
# Hosts `doo' and `ike' are defined in
# `./fixtures/_known_hosts_/spaced  known_hosts'
lappend hosts doo ike
set hosts        [join [bash_sort $hosts       ] "\\s+"]
set hosts_orig   [join [bash_sort $hosts_orig  ] "\\s+"]
set hosts_config [join [bash_sort $hosts_config] "\\s+"]
# Call _known_hosts
set cmd {unset COMPREPLY; _known_hosts_real -aF 'fixtures/_known_hosts_real/spaced  conf' ''; echo_array COMPREPLY}
send "$cmd\r"
expect -ex "$cmd\r\n"
expect {
    -re "^$hosts\r\n/@$"  { pass "$test" }
    -re "^$hosts_orig\r\n/@$"  { fail "$test (config file)" }
    -re "^$hosts_config\r\n/@$"  { fail "$test (known hosts file)" }
    -re /@ { unresolved "$test at prompt" }
    default { unresolved "$test" }
}
sync_after_int

set test "Files starting with tilde (~) should work"
set hosts [get_hosts]
# Hosts `two*' are defined in ./fixtures/_known_hosts_real/known_hosts2
# Host `three' is defined in ./fixtures/_known_hosts_real/known_hosts3
# Host `four' is defined in ./fixtures/_known_hosts_real/known_hosts4
lappend hosts two two2 two3 two4 three four
set hosts [join [bash_sort $hosts] "\\s+"]
# Setup environment
set cmd {OLDHOME=$HOME; HOME=$SRCDIRABS}
send "$cmd\r"
expect -ex "$cmd\r\n/@"
# Call _known_hosts
set cmd {unset COMPREPLY; _known_hosts_real -aF fixtures/_known_hosts_real/config_tilde ''; echo_array COMPREPLY}
send "$cmd\r"
expect -ex "$cmd\r\n"
expect {
    -re "^$hosts\r\n/@$"  { pass "$test" }
    default { unresolved "$test" }
}
# Teardown environment
set cmd {HOME=$OLDHOME}
send "$cmd\r"
expect -ex "$cmd\r\n/@"
sync_after_int

set test "Included config files should work"
set hosts [get_hosts]
# Host 'recursion' is defined in
# ./fixtures/_known_hosts_real/config_include_recursion
# Host 'relative_path' is defined in
# ./fixtures/_known_hosts_real/.ssh/config_relative_path
lappend hosts recursion relative_path
set hosts [join [bash_sort $hosts] "\\s+"]
# Setup environment
# Redefined HOME to handle relative path inclusions on $HOME/.ssh
set cmd {OLDHOME=$HOME; HOME="$SRCDIRABS/fixtures/_known_hosts_real"}
send "$cmd\r"
expect -ex "$cmd\r\n/@"
# Call _known_hosts
set cmd {unset COMPREPLY; _known_hosts_real -aF fixtures/_known_hosts_real/config_include ''; echo_array COMPREPLY}
send "$cmd\r"
expect -ex "$cmd\r\n"
expect {
    -re "^$hosts\r\n/@$"  { pass "$test" }
    default { unresolved "$test" }
}
# Teardown environment
set cmd {HOME=$OLDHOME}
send "$cmd\r"
expect -ex "$cmd\r\n/@"
sync_after_int


teardown
