repos:

  - repo: https://github.com/alessandrojcm/commitlint-pre-commit-hook
    rev: v5.0.0
    hooks:
      - id: commitlint
        additional_dependencies: ["@commitlint/config-conventional@12.1.4"]
        stages: [commit-msg]
  # TODO: make commitlint happen also in CI
  # https://github.com/alessandrojcm/commitlint-pre-commit-hook/issues/36

  - repo: local
    hooks:
      - id: shfmt
        name: shfmt
        language: golang
        additional_dependencies: [mvdan.cc/sh/v3/cmd/shfmt@v3.3.0]
        entry: shfmt
        args: [-w, -s]
        types: [text]
        files: ^(bash_completion|completions/.+|test/(config/bashrc|update-test-cmd-list)|.+\.sh(\.in)?)$
        exclude: ^completions/(\.gitignore|Makefile.*)$
        stages: [commit]

  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.7.2.1
    hooks:
      - id: shellcheck
        args: [-f, gcc]
        types: [text]
        files: ^(bash_completion|completions/.+|test/(config/bashrc|update-test-cmd-list)|.+\.sh(\.in)?)$
        exclude: ^completions/(\.gitignore|Makefile.*)$
        require_serial: false  # We disable SC1090 anyway, so parallel is ok
        stages: [commit]

  - repo: local
    hooks:
      - id: update-test-cmd-list
        name: update-test-cmd-list
        language: script
        entry: test/update-test-cmd-list
        files: ^test/t/.+\.py$
        pass_filenames: false
        stages: [commit]

  - repo: https://github.com/psf/black
    rev: 21.6b0
    hooks:
      - id: black
        types: [text]
        files: ^(helpers/python|.+\.py)$
        exclude: ^completions/
        stages: [commit]

  - repo: https://github.com/PyCQA/flake8
    rev: 3.9.2
    hooks:
      - id: flake8
        args: [--config=test/setup.cfg]
        additional_dependencies:
          - flake8-bugbear==21.4.3
          - flake8-isort==4.0.0
          - isort==5.9.1
        types: [text]
        files: ^(helpers/python|.+\.py)$
        exclude: ^completions/
        stages: [commit]

  - repo: local
    hooks:
      - id: mypy
        name: mypy
        language: python
        additional_dependencies: [venv-run>=0.1.0]
        entry: venv-run mypy
        args: [--config-file=test/setup.cfg]
        types: [python]
        # Intentionally not run on helpers/python (we support very old versions)
        exclude: ^completions/|^test/fixtures/pytest/
        stages: [commit]

  - repo: https://github.com/asottile/pyupgrade
    rev: v2.20.0
    hooks:
      - id: pyupgrade
        args: [--py36-plus, --keep-percent-format]
        exclude: ^completions/
        stages: [commit]

  - repo: https://github.com/perltidy/perltidy
    rev: "20210625"
    hooks:
      - id: perltidy
        types: [text]
        files: ^(helpers/perl|.+\.p[ml])$
        stages: [commit]

  - repo: local
    hooks:
      - id: perlcritic
        name: perlcritic
        language: perl
        additional_dependencies: [PETDANCE/Perl-Critic-1.140.tar.gz]
        entry: perlcritic
        args: [--quiet, --verbose, "5"]
        types: [text]
        files: ^(helpers/perl|.+\.p[ml])$
        stages: [commit]

  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.27.1
    hooks:
      - id: markdownlint
        stages: [commit]

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.0.1
    hooks:
      - id: check-case-conflict
        stages: [commit]

  - repo: https://github.com/codespell-project/codespell
    rev: v2.0.0
    hooks:
      - id: codespell
        args: [--config, test/setup.cfg]
        exclude: ^(CHANGES|test/((codespell-ignore|test-cmd-list)\.txt|fixtures/.+))$
        stages: [commit]
