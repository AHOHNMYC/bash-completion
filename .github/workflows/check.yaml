name: checks

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ">=1.15"  # for shfmt
      - run: |
          python3 -m venv venv  # for venv-run
          source venv/bin/activate
          python3 -m pip install -Ur test/requirements-dev.txt
      - uses: pre-commit/action@v2.0.3

  distcheck:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - dist: alpine
          - dist: centos7
          - dist: debian10
          - dist: debian10
            bsd: true
            network: none
          - dist: fedoradev
          - dist: ubuntu14
    steps:
      - uses: actions/checkout@v2
      - uses: GoogleCloudPlatform/release-please-action@v2
        with:
          release-type: simple
        id: release
        if: ${{matrix.dist == 'alpine'}}
      - run: |
          version=$(cat version.txt)
          sed -i -re "s/^(BASH_COMPLETION_VERSINFO=).*/\\1(${version//./ })/" bash_completion
          sed -i -re "s/^(AC_INIT\(.*\[)[0-9.]+(\].*)/\\1$version\\2/" configure.ac
          git config user.name $(git log -1 --format=format:%an)
          git config user.email $(git log -1 --format=format:%ae)
          git commit --message="chore: bump release in dist files" bash_completion configure.ac
          git tag --force ${{steps.release.outputs.tag_name}}
          git push
          git push --tags --force
        if: ${{steps.release.outputs.release_created}}
      # A "container" workflow config would be cleaner here, but comes with
      # some restrictions/oddities: changes root's $HOME to /github/home
      # without changing the actual home dir that can cause some problems,
      # and does not provide a way to run with --network none.
      # fedoradev unconfined: https://bugzilla.redhat.com/1900021
      - run: >-
          docker run
          --rm
          --tty
          --env CI=true
          --env DIST=${{matrix.dist}}
          --env BSD=${{matrix.bsd}}
          --env PYTESTFLAGS=--verbose
          --env NETWORK=$NETWORK
          ${NETWORK:+--network $NETWORK}
          $(test $DIST = fedoradev && echo --security-opt seccomp=unconfined)
          --volume $PWD:/usr/src/bash-completion
          --workdir /usr/src/bash-completion
          vskytta/bash-completion:${{matrix.dist}}
          test/docker-script.sh
        env:
          DIST: ${{matrix.dist}}
          NETWORK: ${{matrix.network}}
      - uses: actions/upload-artifact@v2
        with:
          path: bash-completion-*.tar.xz
        if: ${{matrix.dist == 'alpine'}}
